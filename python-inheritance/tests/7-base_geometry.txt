
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("test", 5)

>>> bg.integer_validator("test", 5.5)
Traceback (most recent call last):
TypeError: test must be an integer

>>> bg.integer_validator("test", "hello")
Traceback (most recent call last):
TypeError: test must be an integer

>>> bg.integer_validator("test", 10)

>>> bg.integer_validator("test", 0)
Traceback (most recent call last):
ValueError: test must be greater than 0

>>> bg.integer_validator("test", -5)
Traceback (most recent call last):
ValueError: test must be greater than 0

>>> bg.integer_validator("test", "nassim")
Traceback (most recent call last):
TypeError: test must be an integer

>>> bg.integer_validator(10)
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(10.5)
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(7.5, 7.5)
Traceback (most recent call last):
TypeError: 7.5 must be an integer

>>> bg.integer_validator(10, 10)

>>> bg.integer_validator(10, "string")
Traceback (most recent call last):
TypeError: 10 must be an integer

>>> bg.integer_validator(10.5, "string")
Traceback (most recent call last):
TypeError: 10.5 must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
